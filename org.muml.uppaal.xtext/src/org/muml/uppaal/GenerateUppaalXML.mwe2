module org.muml.uppaal.GenerateUppaalXML

import org.eclipse.emf.mwe.utils.StandaloneSetup
import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var pluginId
var modelPluginId
var rootPath = "../"

Workflow {
	bean = StandaloneSetup {
		platformUri = "${rootPath}"
		scanClassPath = true
		
		registerGeneratedEPackage = "${modelPluginId}.UppaalPackage"
		registerEcoreFile = "platform:/resource/${modelPluginId}/model/uppaal.ecore"
		registerGenModelFile = "platform:/resource/${modelPluginId}/model/uppaal.genmodel"
	}
	
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "${pluginId}"
				rootPath = rootPath
				runtimeTest = {
					enabled = true
				}
				eclipsePlugin = {
					enabled = true
				}
				eclipsePluginTest = {
					enabled = true
				}
				createEclipseMetaData = true
			}
			
			code = {
				encoding = "UTF-8"
				lineDelimiter = "\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
				preferXtendStubs = false
			}
		}
		
		language = StandardLanguage {
			name = "org.muml.uppaal.UppaalXML"
			fileExtensions = "xml"
			referencedResource = "platform:/resource/${modelPluginId}/model/uppaal.genmodel"
			
			// See https://github.com/eclipse/xtext-core/issues/41#issuecomment-634098890
			referencedResource = "platform:/resource/org.eclipse.emf.ecore/model/Ecore.ecore"
			
			fragment = ecore2xtext.Ecore2XtextValueConverterServiceFragment2 auto-inject {}

			formatter = {
				generateStub = true
			}

			serializer = {
				generateStub = true
			}
			
			validator = {
				// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
				// Generates checks for @Deprecated grammar annotations, an IssueProvider and a corresponding PropertyPage
				generateDeprecationValidation = true
			}
			
			generator = {
				generateStub = true
			}
			
			junitSupport = {
				junitVersion = "5"
			}
		}
	}
}
