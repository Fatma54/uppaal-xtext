/*
 * generated by Xtext 2.28.0
 */
package org.uppaal.formatting2;

import org.eclipse.xtext.formatting2.AbstractJavaFormatter;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.uppaal.NTA;
import org.uppaal.declarations.ParameterContainer;
import org.uppaal.queries.QueryDescription;
import org.uppaal.templates.Edge;
import org.uppaal.templates.Location;
import org.uppaal.templates.Template;

public class UppaalXMLFormatter extends AbstractJavaFormatter {

	protected void format(NTA nTA, IFormattableDocument doc) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		doc.format(nTA.getGlobalDeclarations());
		for (Template template : nTA.getTemplate()) {
			doc.format(template);
		}
		doc.format(nTA.getSystemDeclarations());
		for (QueryDescription queryDescription : nTA.getQueries()) {
			doc.format(queryDescription);
		}
	}

	protected void format(Template template, IFormattableDocument doc) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (ParameterContainer parameterContainer : template.getParameter()) {
			doc.format(parameterContainer);
		}
		doc.format(template.getDeclarations());
		for (Location location : template.getLocation()) {
			doc.format(location);
		}
		for (Edge edge : template.getEdge()) {
			doc.format(edge);
		}
	}
	
	// TODO: implement for IdentifiableLocation, Edge, Synchronization, Selection, GlobalDeclarations, LocalDeclarations, SystemDeclarations, ProgressMeasure, TemplateDeclaration, System, TypedDeclaration, Variable, ExpressionInitializer, ArrayInitializer, DataPrefixExpression, RangeTypeSpecification, IntegerBounds, StructTypeSpecification, ScalarTypeSpecification, TypeDeclaration, ChannelPriorityDeclaration, ChannelPriorityGroup, ChannelItem, Function, ParameterContainer, Block, ExpressionStatement, ForLoop, Iteration, WhileLoop, DoWhileLoop, IfStatement, ReturnStatement, QuantificationExpression, LogicalExpression, NegationExpression, AssignmentExpression, ConditionExpression, BitwiseExpression, CompareExpression, MinMaxExpression, BitShiftExpression, ArithmeticExpression, IncrementDecrementExpression, ScopedIdentifierExpression, FunctionCallExpression, IdentifierExpression, QueryDescription, Estimate, QuantifiedTemporalQuery, LeadsToQuery, LimitQuery, UnaryWinQuery, AControlQuery, BoundType, SmcBounds, SimulateQuery, Probability, ProbabilityComparison, LearningQuery
}
